#include <stdio.h>
#include <stdlib.h>
#include <csignal>

#include "ims/Store.hh"
#include "Read.hh"

static const char USAGE[] = "usage: ims_read <partition> <image_base> <starting image index> <number of images>\n";

#define PROGRAM    argv[0]
#define PARTITION  argv[1]
#define IMAGE_BASE argv[2]
#define START      argv[3]
#define REPEATS    argv[4]

/*
** ++
**
**
** --
*/
static const char folder[]="";

static bool doExit = false;

void quitIt(int s)
{
  printf("\n");
  if(doExit)
  {
    printf("\n");
    exit(1);
  }
  doExit=true;
}


int main(int argc, char* argv[])
{
  
  if(argc < 4) {printf(USAGE); return EXIT_SUCCESS;}

  struct sigaction sigIntHandler;
  sigIntHandler.sa_handler = quitIt;
  sigemptyset(&sigIntHandler.sa_mask);
  sigIntHandler.sa_flags = 0;
  sigaction(SIGINT, &sigIntHandler, NULL);

  unsigned repeats = atol(REPEATS);

  IMS::Store store(PARTITION);

  store.servers().print();

  unsigned image_number = atol(START);
  char image_name[64];
  char* image = &image_name[0];
  unsigned iterations = 0;
  while(!doExit)
  {
    sprintf(image_name, "%s%i", IMAGE_BASE, image_number);
    
    IMS::Editor::Read read(store, folder);
    read.process(1, (const char**)&image, 0);
    ++image_number;
    if(++iterations==repeats) break;
  }

  return EXIT_SUCCESS;
}
